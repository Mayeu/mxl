#! /usr/bin/env sh

# "Unofficial strict mode" http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# Initial value for the options
aflag=0
rflag=0

while getopts ":har" opt; do
  case "$opt" in
    a)
      aflag=1
      ;;
    r)
      rflag=1
      ;;
    h|*)
      echo "You should not use this like that."
      exit 0
      ;;
  esac
done

# Some setup
############

_formail="formail"
email=''

# Read the whole e-mail
while read -r line
do
  email="${email}
${line}"
done

# Exit trap
finish() {
  # All print the e-mail again
  echo "$email"
}

trap finish EXIT

# Print error
err() {
  echo "error: $@. The e-mail has not been modified." >&2
}

# Sanity test, so $aflag and $rflag should always be different
test $aflag -eq $rflag && {
  err "You must provide exactly one of the -a or -d option"
  exit 1
}

# shift to the argument
shift $((OPTIND-1))
readonly LABEL=$@

# Get current label
get_current_label() {
  echo "$email"             |
  $_formail -x X-Label      |
  sed -e 's/^[[:space:]]//' |
  sed -e 's/[[:space:]]$//'
}

# Add a label
addlabel() {
  local current_labels=$(get_current_label)
  if test -z "$current_labels"
  then
    new_labels="${LABEL}"
  else
    new_labels="${current_labels} ${LABEL}"
  fi

  echo "$email" | $_formail -fI "X-Label: ${new_labels}"
}

test $aflag -eq 1 && {
  email=$(addlabel)
}

test $rflag -eq 1 && {
  echo "Remove the '${LABEL}' label"
}
